---
/**
 * Content-only tag-based photo filtering with pagination - consolidated using shared utilities
 * Handles URLs: /photos/tags/landscape, /photos/tags/landscape/2, etc.
 */
import { config } from 'virtual:astro-photostream/config';
import { layoutConfig, shouldUseLayout, layoutWrapper, layoutProps } from 'virtual:astro-photostream/layout';
import { generateTagPaths } from '../../../../utils/pagination.js';
import { getPhotosCollection, filterPhotosByTag, sortPhotosByDate, convertToPhotoMetadata, getRelatedTags } from '../../../../utils/photo-data.js';
import { generateTagPageSeo } from '../../../../utils/seo.js';
import PhotoStream from '../../../../components/PhotoStream.astro';
import MultiMarkerMap from '../../../../components/MultiMarkerMap.astro';
import type { PhotoMetadata } from '../../../../types.js';
import type { GetStaticPaths, Page } from 'astro';

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const allPhotos = await getPhotosCollection();
  const allTags = await generateTagPaths();
  const paths = [];

  for (const tag of allTags) {
    const taggedPhotos = filterPhotosByTag(allPhotos, tag);
    const sortedPhotos = sortPhotosByDate(taggedPhotos);
    const photos = sortedPhotos.map(convertToPhotoMetadata);

    if (photos.length === 0) continue;

    const relatedTags = getRelatedTags(photos, tag).slice(0, 10);

    const paginatedPaths = paginate(photos, {
      params: { tag },
      pageSize: config.gallery.itemsPerPage,
      props: {
        tag,
        totalPhotos: photos.length,
        relatedTags,
        config,
        layoutConfig,
        layoutWrapper,
        layoutProps
      }
    });

    paths.push(...paginatedPaths);
  }

  return paths;
};

// Get paginated data
const {
  page,
  tag,
  totalPhotos,
  relatedTags,
  layoutConfig: passedLayoutConfig,
  layoutWrapper: passedLayoutWrapper,
  layoutProps: passedLayoutProps
} = Astro.props as {
  page: Page<PhotoMetadata>,
  tag: string,
  totalPhotos: number,
  relatedTags: string[],
  layoutConfig: any,
  layoutWrapper: string | null,
  layoutProps: any
};
const photos = page.data;

// Generate SEO metadata for layout wrapper
const seoData = generateTagPageSeo(
  tag,
  page.currentPage,
  page.lastPage,
  totalPhotos,
  config.seo,
  Astro.url
);

// Prepare props for layout wrapper
const layoutWrapperProps = {
  title: seoData.title,
  description: seoData.description,
  ...passedLayoutProps
};

// Conditionally import layout wrapper if enabled
let LayoutComponent = null;
if (shouldUseLayout && passedLayoutWrapper) {
  const { LayoutComponent: ImportedLayoutComponent } = await import('virtual:astro-photostream/layout-wrapper');
  LayoutComponent = ImportedLayoutComponent;
}
---

{LayoutComponent ? (
  <LayoutComponent {...layoutWrapperProps}>
    <div class="aps-content-container">
      <!-- Navigation Header -->
      <nav class="aps-nav">
        <a href="/photos" class="aps-nav-link">← All Photos</a>
      </nav>

      <header class="aps-header">
        <h1 class="aps-title">
          <span class="aps-tag-label">
            #{tag}
          </span>
          {page.currentPage > 1 && <span class="aps-page-info">- Page {page.currentPage}</span>}
        </h1>
        <p class="aps-description">
          {page.currentPage === 1
            ? `${totalPhotos} photograph${totalPhotos !== 1 ? 's' : ''}`
            : `Page ${page.currentPage} of ${page.lastPage} • ${totalPhotos} total photos`
          }
        </p>
      </header>

      <!-- Related Tags -->
      {relatedTags.length > 0 && (
        <section class="aps-section">
          <h2 class="aps-section-title">Related Tags</h2>
          <div class="aps-tag-cloud">
            {relatedTags.map(relatedTag => (
              <a
                href={`/photos/tags/${relatedTag}`}
                class="aps-tag-link"
              >
                #{relatedTag}
              </a>
            ))}
          </div>
        </section>
      )}

      <!-- Photo Gallery Section -->
      <section class="aps-section">
        <PhotoStream photos={photos} />
      </section>

      <!-- Pagination -->
      {(page.url.prev || page.url.next) && (
        <nav class="aps-pagination" aria-label="Tag photos pagination">
          <div class="aps-pagination-controls">
            {page.url.prev ? (
              <a
                href={page.url.prev}
                class="aps-pagination-link"
                rel="prev"
              >
                ← Previous
              </a>
            ) : (
              <span class="aps-pagination-link aps-pagination-link--disabled">
                ← Previous
              </span>
            )}

            <div class="aps-pagination-info">
              <span class="aps-pagination-current">{page.currentPage}</span>
              <span class="aps-pagination-separator">of</span>
              <span class="aps-pagination-total">{page.lastPage}</span>
            </div>

            {page.url.next ? (
              <a
                href={page.url.next}
                class="aps-pagination-link"
                rel="next"
              >
                Next →
              </a>
            ) : (
              <span class="aps-pagination-link aps-pagination-link--disabled">
                Next →
              </span>
            )}
          </div>
        </nav>
      )}
    </div>
  </LayoutComponent>
) : (
  <!-- Minimal fallback when no layout wrapper is provided -->
  <html lang="en">
    <head>
      <meta charset="utf-8" />
      <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
      <meta name="viewport" content="width=device-width" />
      <meta name="generator" content={Astro.generator} />
      <title>{pageTitle}</title>
      <meta name="description" content={pageDescription} />

      <!-- Open Graph -->
      <meta property="og:title" content={pageTitle} />
      <meta property="og:description" content={pageDescription} />
      <meta property="og:type" content="website" />
    </head>
    <body>
      <main class="tag-photos-page">
        <!-- Navigation Header -->
        <nav class="page-nav">
          <a href="/photos" class="nav-link">← All Photos</a>
        </nav>

        <header class="page-header">
          <h1 class="page-title">
            <span class="tag-label">#{tag}</span>
            {!isFirstPage && <span class="page-info">- Page {page.currentPage}</span>}
          </h1>
          <p class="page-description">
            {isFirstPage
              ? `${totalPhotos} photograph${totalPhotos !== 1 ? 's' : ''} ${dateRange ? `from ${dateRange}` : ''}`
              : `Page ${page.currentPage} of ${page.lastPage} • ${totalPhotos} total photos`
            }
          </p>
        </header>

        <!-- Related Tags -->
        {relatedTags.length > 0 && (
          <section class="related-tags-section">
            <h2 class="section-title">Related Tags</h2>
            <div class="tag-cloud">
              {relatedTags.map(relatedTag => (
                <a href={`/photos/tags/${relatedTag}`} class="tag-link">
                  #{relatedTag}
                </a>
              ))}
            </div>
          </section>
        )}


        <!-- Photo Gallery Section -->
        <section class="photos-section">
          <PhotoStream photos={photos} />
        </section>

        <!-- Pagination -->
        {(page.url.prev || page.url.next) && (
          <nav class="pagination" aria-label="Tag photos pagination">
            <div class="pagination-links">
              {page.url.prev ? (
                <a href={page.url.prev} class="pagination-link pagination-prev" rel="prev">
                  ← Previous
                </a>
              ) : (
                <span class="pagination-link pagination-prev disabled">← Previous</span>
              )}

              <div class="pagination-info">
                <span class="current-page">{page.currentPage}</span>
                <span class="separator">of</span>
                <span class="total-pages">{page.lastPage}</span>
              </div>

              {page.url.next ? (
                <a href={page.url.next} class="pagination-link pagination-next" rel="next">
                  Next →
                </a>
              ) : (
                <span class="pagination-link pagination-next disabled">Next →</span>
              )}
            </div>
          </nav>
        )}
      </main>

      <style>
        /* Minimal styling for fallback mode */
        .tag-photos-page {
          max-width: 1200px;
          margin: 0 auto;
          padding: 2rem 1rem;
        }

        .page-nav {
          margin-bottom: 2rem;
        }

        .nav-link {
          color: #3b82f6;
          text-decoration: none;
        }

        .page-header {
          text-align: center;
          margin-bottom: 2rem;
        }

        .page-title {
          font-size: 2rem;
          margin-bottom: 0.5rem;
          color: #1f2937;
        }

        .tag-label {
          background: #3b82f6;
          color: white;
          padding: 0.25rem 0.75rem;
          border-radius: 0.5rem;
          font-size: 0.9em;
        }

        .page-description {
          color: #6b7280;
          font-size: 1.1rem;
        }

        .section-title {
          font-size: 1.5rem;
          margin: 2rem 0 1rem 0;
          color: #1f2937;
        }

        .tag-cloud {
          display: flex;
          flex-wrap: wrap;
          gap: 0.5rem;
          margin-bottom: 2rem;
        }

        .tag-link {
          background: #f3f4f6;
          color: #374151;
          padding: 0.25rem 0.75rem;
          border-radius: 0.375rem;
          text-decoration: none;
          font-size: 0.9rem;
        }

        .tag-link:hover {
          background: #e5e7eb;
        }

        .pagination {
          margin-top: 3rem;
          display: flex;
          justify-content: center;
        }

        .pagination-links {
          display: flex;
          align-items: center;
          gap: 1rem;
        }

        .pagination-link {
          padding: 0.5rem 1rem;
          background: #f3f4f6;
          border-radius: 0.375rem;
          text-decoration: none;
          color: #374151;
        }

        .pagination-link:hover:not(.disabled) {
          background: #e5e7eb;
        }

        .pagination-link.disabled {
          opacity: 0.5;
        }

        @media (prefers-color-scheme: dark) {
          .page-title {
            color: #f9fafb;
          }
          .page-description {
            color: #9ca3af;
          }
          .section-title {
            color: #f9fafb;
          }
          .tag-link {
            background: #374151;
            color: #f9fafb;
          }
          .tag-link:hover {
            background: #4b5563;
          }
          .pagination-link {
            background: #374151;
            color: #f9fafb;
          }
          .pagination-link:hover:not(.disabled) {
            background: #4b5563;
          }
        }
      </style>
    </body>
  </html>
)}

<style>
/* Astro PhotoStream - Scoped styles with aps- prefix for tag pages */
.aps-container {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem 1rem;
}

.aps-nav {
  margin-bottom: 2rem;
}

.aps-nav-link {
  color: #6b7280;
  text-decoration: none;
  transition: color 0.2s ease;
}

.aps-nav-link:hover {
  color: #111827;
}

.aps-header {
  text-align: center;
  margin-bottom: 3rem;
}

.aps-title {
  font-size: 2.5rem;
  font-weight: bold;
  color: #111827;
  margin-bottom: 1rem;
}

.aps-tag-label {
  display: inline-block;
  background: #3b82f6;
  color: white;
  padding: 0.25rem 0.75rem;
  border-radius: 9999px;
  font-size: 0.875rem;
  font-weight: 500;
  margin-right: 0.75rem;
}

.aps-page-info {
  color: #6b7280;
}

.aps-description {
  font-size: 1.125rem;
  color: #6b7280;
  margin-bottom: 1.5rem;
}

.aps-section {
  margin-bottom: 3rem;
}

.aps-section-title {
  font-size: 1.5rem;
  font-weight: bold;
  color: #111827;
  margin-bottom: 1.5rem;
}

.aps-tag-cloud {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
}

.aps-tag-link {
  display: inline-block;
  background: #f3f4f6;
  color: #374151;
  padding: 0.25rem 0.75rem;
  border-radius: 9999px;
  font-size: 0.875rem;
  font-weight: 500;
  text-decoration: none;
  transition: background-color 0.2s ease, color 0.2s ease;
}

.aps-tag-link:hover {
  background: #e5e7eb;
}

.aps-map-section {
  margin: 3rem 0;
}

.aps-map-container,
.aps-map-container-inner {
  border-radius: 0.5rem;
  overflow: hidden;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  margin-bottom: 1rem;
}

.aps-map-note {
  font-size: 0.875rem;
  color: #6b7280;
  text-align: center;
}

.aps-pagination {
  display: flex;
  justify-content: center;
  margin-top: 3rem;
}

.aps-pagination-controls {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.aps-pagination-link {
  padding: 0.5rem 1rem;
  background: #f3f4f6;
  color: #374151;
  text-decoration: none;
  border-radius: 0.375rem;
  transition: background-color 0.2s ease, color 0.2s ease;
}

.aps-pagination-link:hover:not(.aps-pagination-link--disabled) {
  background: #e5e7eb;
  color: #111827;
}

.aps-pagination-link--disabled {
  background: #f9fafb;
  color: #9ca3af;
  cursor: not-allowed;
}

.aps-pagination-info {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  color: #6b7280;
}

.aps-pagination-current,
.aps-pagination-total {
  font-weight: 500;
}

.aps-pagination-separator {
  color: #9ca3af;
}

/* Responsive design */
@media (min-width: 640px) {
  .aps-container {
    padding: 2rem 1.5rem;
  }

  .aps-title {
    font-size: 3rem;
  }
}

@media (min-width: 1024px) {
  .aps-container {
    padding: 2rem 2rem;
  }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  .aps-nav-link {
    color: #9ca3af;
  }

  .aps-nav-link:hover {
    color: #f9fafb;
  }

  .aps-title {
    color: #f9fafb;
  }

  .aps-page-info {
    color: #9ca3af;
  }

  .aps-description {
    color: #9ca3af;
  }

  .aps-section-title {
    color: #f9fafb;
  }

  .aps-tag-link {
    background: #374151;
    color: #f9fafb;
  }

  .aps-tag-link:hover {
    background: #4b5563;
  }

  .aps-map-note {
    color: #9ca3af;
  }

  .aps-pagination-link {
    background: #374151;
    color: #f9fafb;
  }

  .aps-pagination-link:hover:not(.aps-pagination-link--disabled) {
    background: #4b5563;
  }

  .aps-pagination-link--disabled {
    background: #1f2937;
    color: #6b7280;
  }

  .aps-pagination-info {
    color: #9ca3af;
  }
}
</style>
