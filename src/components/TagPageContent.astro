---
/**
 * Reusable tag page content component
 * Extracts shared content logic from tag filtering route files
 */

import PhotoStream from './PhotoStream.astro';
import MultiMarkerMap from './MultiMarkerMap.astro';
import { getPhotosWithLocation, calculateDateRange } from '../utils/photo-data.js';
import type { PhotoMetadata } from '../types.js';

// Import consolidated CSS
import '../styles/aps-core.css';

export interface Props {
  photos: PhotoMetadata[];
  page: any;
  tag: string;
  totalPhotos: number;
  relatedTags: string[];
  config: any;
}

const { photos, page, tag, totalPhotos, relatedTags, config } = Astro.props;

// Get photos with location data for map
const photosWithLocation = getPhotosWithLocation(photos);

// Calculate date range for this page
const dateRange = calculateDateRange(photos);

// Page metadata
const isFirstPage = page.currentPage === 1;
const currentPage = page.currentPage;
const totalPages = page.lastPage;
---

<main class="aps-container">
  <!-- Navigation -->
  <nav class="aps-flex aps-items-center aps-gap-sm aps-mb-2xl aps-text-sm">
    <a href="/photos" class="aps-link">Gallery</a>
    <span class="aps-text-muted">•</span>
    {!isFirstPage && (
      <>
        <a href={`/photos/tags/${tag}`} class="aps-link">#{tag}</a>
        <span class="aps-text-muted">•</span>
      </>
    )}
    <span class="aps-text-secondary aps-font-medium">
      {isFirstPage ? `#${tag}` : `Page ${currentPage}`}
    </span>
  </nav>

  <header class="aps-text-center aps-mb-2xl">
    <div class="aps-bg-accent aps-text-inverse aps-p-sm aps-rounded-xl aps-mb-lg" style="display: inline-block;">#{tag}</div>
    <h1 class="aps-text-3xl aps-font-bold aps-mb-sm aps-text-primary">
      {isFirstPage ? `Photos tagged "${tag}"` : `"${tag}" Photos - Page ${currentPage}`}
    </h1>
    <p class="aps-text-xl aps-text-secondary aps-mb-lg">
      {isFirstPage
        ? `${totalPhotos} photograph${totalPhotos !== 1 ? 's' : ''} ${dateRange ? `from ${dateRange}` : ''}`
        : `Page ${currentPage} of ${totalPages} • ${totalPhotos} total photos with this tag`
      }
    </p>

    {photos.length > 0 && photosWithLocation.length > 0 && (
      <div class="aps-flex aps-justify-center aps-gap-md">
        <span class="aps-text-muted aps-text-sm">
          {photosWithLocation.length} with locations{!isFirstPage ? ' on this page' : ''}
        </span>
      </div>
    )}
  </header>

  {photos.length === 0 ? (
    <div class="aps-text-center aps-p-3xl">
      <h2 class="aps-text-2xl aps-text-primary aps-mb-md">No photos found</h2>
      <p class="aps-text-secondary aps-mb-2xl">No photos are tagged with "{tag}".</p>
      <a href="/photos" class="aps-link aps-font-medium">← Browse all photos</a>
    </div>
  ) : (
    <>
      <!-- Location Map (if enabled and photos have location data) -->
      {config.gallery.enableMap && photosWithLocation.length > 0 && (
        <section class="aps-mb-2xl">
          <h2 class="aps-text-2xl aps-font-semibold aps-mb-lg aps-text-primary aps-text-center">
            {isFirstPage
              ? `Where "${tag}" photos were taken`
              : `"${tag}" Photo Locations (Page ${currentPage})`
            }
          </h2>
          <div class="aps-rounded-xl aps-shadow-md" style="overflow: hidden;">
            <MultiMarkerMap
              photos={photosWithLocation}
              zoom={2}
              class="tag-locations-map"
            />
          </div>
        </section>
      )}

      <!-- Photo Grid -->
      <section class="aps-mb-2xl">
        <PhotoStream
          photos={photos}
          itemsPerPage={config.gallery.itemsPerPage}
          showPagination={false}
          showMap={false}
          class="tag-photo-stream"
        />
      </section>

      <!-- Astro's Built-in Pagination -->
      {page.lastPage > 1 && (
        <nav class="aps-flex aps-flex-col aps-items-center aps-gap-md aps-mt-2xl aps-p-lg aps-border-t" aria-label={`"${tag}" photos pagination`}>
          <div class="aps-text-secondary aps-text-sm">
            Showing {page.start + 1}–{page.end + 1} of {page.total} photos tagged "{tag}"
          </div>
          
          <div class="aps-flex aps-items-center aps-gap-md aps-justify-center" style="flex-wrap: wrap;">
            {page.url.prev && (
              <a 
                href={page.url.prev} 
                class="aps-button"
                aria-label="Previous page"
              >
                ← Previous
              </a>
            )}
            
            <div class="aps-flex aps-items-center aps-gap-xs">
              {/* First page */}
              {currentPage > 3 && (
                <>
                  <a href={`/photos/tags/${tag}`} class="aps-page-number" aria-label="Page 1">1</a>
                  {currentPage > 4 && <span class="aps-text-secondary aps-p-sm">…</span>}
                </>
              )}
              
              {/* Current page range */}
              {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {
                const pageNum = Math.max(1, Math.min(totalPages - 4, currentPage - 2)) + i;
                if (pageNum > totalPages) return null;
                
                return pageNum === currentPage ? 
                  <span class="aps-page-number aps-page-number--current" aria-current="page">
                    {pageNum}
                  </span>
                : 
                  <a 
                    href={pageNum === 1 ? `/photos/tags/${tag}` : `/photos/tags/${tag}/${pageNum}`}
                    class="aps-page-number"
                    aria-label={`Page ${pageNum}`}
                  >
                    {pageNum}
                  </a>;
              })}
              
              {/* Last page */}
              {currentPage < totalPages - 2 && (
                <>
                  {currentPage < totalPages - 3 && <span class="aps-text-secondary aps-p-sm">…</span>}
                  <a 
                    href={`/photos/tags/${tag}/${totalPages}`} 
                    class="aps-page-number"
                    aria-label={`Page ${totalPages}`}
                  >
                    {totalPages}
                  </a>
                </>
              )}
            </div>
            
            {page.url.next && (
              <a 
                href={page.url.next} 
                class="aps-button"
                aria-label="Next page"
              >
                Next →
              </a>
            )}
          </div>
        </nav>
      )}

      <!-- Related Tags -->
      {relatedTags.length > 0 && (
        <section class="aps-mb-2xl">
          <h2 class="aps-text-2xl aps-font-semibold aps-mb-lg aps-text-primary aps-text-center">Related Tags</h2>
          <div class="aps-flex aps-gap-sm aps-justify-center" style="flex-wrap: wrap;">
            {relatedTags.map(relatedTag => (
              <a href={`/photos/tags/${relatedTag}`} class="aps-bg-muted aps-text-primary aps-p-sm aps-rounded-xl aps-link aps-text-sm aps-font-medium" style="text-decoration: none; transition: background-color 0.2s;">
                #{relatedTag}
              </a>
            ))}
          </div>
        </section>
      )}
    </>
  )}
</main>

