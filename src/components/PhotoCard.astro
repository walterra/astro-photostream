---
import type { PhotoCardProps } from '../types.js';
import { Image, getImage } from 'astro:assets';

interface Props extends PhotoCardProps {
  size?: "small" | "medium" | "large";
}

const { 
  photo, 
  size = "medium",
  loading = 'lazy',
  class: className = ''
} = Astro.props;

// Size-specific classes using aps- prefix
const sizeClasses = {
  small: "aps-card aps-card--small",
  medium: "aps-card aps-card--medium", 
  large: "aps-card aps-card--large",
};

// Size-specific image dimensions
const imageDimensions = {
  small: { width: 300, height: 300 },
  medium: { width: 400, height: 300 },
  large: { width: 600, height: 400 }
};

const dimensions = imageDimensions[size];

// Generate cropped image for square thumbnails
const optimizedImage = photo.coverImage?.src ? await getImage({
  src: photo.coverImage.src,
  width: dimensions.width,
  height: dimensions.height,
  fit: 'cover',
  format: 'webp'
}).catch(error => {
  console.warn('Failed to optimize image:', error);
  return null;
}) : null;
---

<article class="aps-photo-card">
  <a href={`/photos/${photo.id}`} class="aps-photo-link">
    <div class={`aps-image-container ${sizeClasses[size]}`}>
      {optimizedImage ? (
        <img
          src={optimizedImage.src}
          alt={photo.coverImage.alt || photo.title || `Photo ${photo.id}`}
          class="aps-photo-image"
          loading={loading}
          width={optimizedImage.attributes.width}
          height={optimizedImage.attributes.height}
        />
      ) : photo.coverImage?.src ? (
        <img
          src={photo.coverImage.src}
          alt={photo.coverImage?.alt || photo.title || `Photo ${photo.id}`}
          class="aps-photo-image"
          loading={loading}
          width={dimensions.width}
          height={dimensions.height}
        />
      ) : (
        <div class="aps-placeholder">
          <span class="aps-placeholder-text">No image</span>
        </div>
      )}
    </div>
    
    {photo.publishDate && (
      <div class="aps-date-container">
        <time class="aps-date-text" datetime={photo.publishDate.toISOString()}>
          {photo.publishDate.toLocaleDateString()}
        </time>
      </div>
    )}
  </a>
</article>

<style>
  .aps-photo-card {
    display: block;
    width: 100%;
  }
  
  .aps-photo-link {
    display: block;
    text-decoration: none;
    color: inherit;
  }
  
  .aps-image-container {
    overflow: hidden;
    border-radius: 8px;
    transition: transform 0.2s ease;
  }
  
  .aps-photo-card:hover .aps-image-container {
    transform: scale(1.02);
  }
  
  .aps-card {
    width: 100%;
    position: relative;
  }
  
  .aps-card--small {
    aspect-ratio: 1;
    max-width: 384px;
  }
  
  .aps-card--medium {
    aspect-ratio: 4/3;
  }
  
  .aps-card--large {
    aspect-ratio: 3/2;
  }
  
  .aps-photo-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 8px;
    transition: transform 0.3s ease;
  }
  
  .aps-photo-card:hover .aps-photo-image {
    transform: scale(1.05);
  }
  
  .aps-placeholder {
    width: 100%;
    height: 100%;
    background-color: #e5e7eb;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 8px;
  }
  
  .aps-placeholder-text {
    color: #9ca3af;
    font-size: 0.875rem;
  }
  
  .aps-date-container {
    margin-top: 0.5rem;
  }
  
  .aps-date-text {
    font-size: 0.75rem;
    color: #6b7280;
    font-weight: 400;
  }
  
  /* Dark mode support */
  @media (prefers-color-scheme: dark) {
    .aps-placeholder {
      background-color: #374151;
    }
    
    .aps-placeholder-text {
      color: #9ca3af;
    }
    
    .aps-date-text {
      color: #9ca3af;
    }
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .aps-card--small {
      max-width: none;
    }
    
    .aps-image-container {
      border-radius: 6px;
    }
    
    .aps-photo-image {
      border-radius: 6px;
    }
    
    .aps-placeholder {
      border-radius: 6px;
    }
  }
  
  /* High contrast mode */
  @media (prefers-contrast: high) {
    .aps-image-container {
      border: 2px solid currentColor;
    }
    
    .aps-placeholder {
      border: 2px solid currentColor;
    }
  }
  
  /* Reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .aps-image-container,
    .aps-photo-image {
      transition: none;
    }
    
    .aps-photo-card:hover .aps-image-container,
    .aps-photo-card:hover .aps-photo-image {
      transform: none;
    }
  }
</style>